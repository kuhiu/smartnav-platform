/*
 * encoder.hpp
 *
 *  Created on: Feb 12, 2023
 *      Author: petalinux
 */

#ifndef SRC_ENCODER_HPP_
#define SRC_ENCODER_HPP_

#include "xil_printf.h"
#include "xparameters.h"
#include "xil_io.h"
#include "xgpio.h"
#include "xintc.h"
#include "xintc_l.h"
#include "xil_exception.h"
#include "microblaze_sleep.h"

class Encoder {
public:
	/** Encoder constructor */
	Encoder() {
		__init_io();
asdasd
	};
	/** Encoder destructor */
	~Encoder();

private:
	/** GPIO */
	XGpio __gpio;
	/** Initialize the axi gpio */
	void __init_io() {
		int status;

		status = XGpio_Initialize(&__gpio, XPAR_AXI_GPIO_0_DEVICE_ID);
		usleep(100);
		XGpio_SetDataDirection(&Gpio, 1, 0xf);
		usleep(100);
		XGpio_InterruptClear(&Gpio, 0x0);

	};


};

#endif /* SRC_ENCODER_HPP_ */
