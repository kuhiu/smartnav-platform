Сборочный контейнер для Petalinux
###############################################################################
Проект предназначен для контейнеризации процесса сборки Petalinux. Поддержка
Petalinux заявленна для RedHat, CentOS, Ubuntu. Конкретные версии
поддерживаемых дистрибутивов зависят от версии petalinux. Для обеспечения
переносимости сборки между разными дистрибутивами может быть целесообразно
перенести процесс сборки в контейнер.


Сборка контейнера
----------------------------------------
Для сборки необходимо скопировать устновочный файл petalinux в директорию с
данным проектом. Имя установочного файла необходимо передать в файле
``build-image.sh`` аргументу `PETA_RUN_FILE`. Так же необходимо указать
номер устанавливаемой версии в переменной ``VERSION``. 

Собранный контейнер занимает порядка 20 Gb места на жиске, но в процессе сборки
может потребовать дополнительное место.

Запуск контейнера
----------------------------------------
Запускается контейнер скриптом ``run-container.sh`` из терминала. Предварительно
необходимо указать корректное имя контейнера в скрипте (по дефолту
petalinux:2021.1).

Скрипт принимает единственный аргумент - путевое имя директории с проектом
petalinux на хосте (директория может быть пустой, а проект можно создать уже в
запущенном контейнере).

Т.к. контейнер запускается в интерактивном режиме, то после запуска должен
появиться терминал запущенный внутри контейнера. 

Для корректной работы petalinux требует инициализации переменных окружения, но в
данном случае это не требуется, т.к.  этот шаг учтен при сборке образа
контейнера.

Для удобства в оболочке контейенра добавлены aliases для основных команд
petalinux:

.. code-block::

   petalinux-build  - plbuild
   petalinux-create - plcreate
   petalinux-config - plconfig

При запуске внутри контейнера поднимается ssh (можно отключить убрав команду из
последней строки в Dockerfile:

.. code-block:: docker

   ENTRYPOINT sudo service ssh start && /bin/bash

Кастомизация
----------------------------------------
В скрипте запуска контейнера добавлены команды позволяющие запускать графические
приложения из контейнера. Petalinux не содержит GUI, но в каких-то случаях может
быть полезно.

Возможно перевести контейнер из интерактивного режима в пакетный. В этом случае
можно запускать команды или скрипты из хостового терминала, так, как будто они
запускаются на хосте, а не из контейнера (может быть полезно в случае
автоматизации процесса сборки). Для этого:

* в Dockerfile удалить строку с ENTRYPOINT:

  .. code-block:: docker

     ENTRYPOINT sudo service ssh start && /bin/bash

  Если ssh нужен - его запуск можно осуществить отдельной командой:

  .. code-block:: docker

     RUN sudo service ssh start

* В ``run-container.sh`` часть запускающую команду docker run модифицировать к
  примерно следующему виду":

  .. code-clock:: sh

     PROJ_DIR=$1
     shift

     docker run                                                  \
         -ti                                                     \
         --rm                                                    \
         --privileged -v /dev/bus/usb:/dev/bus/usb               \
         -e DISPLAY=$DISPLAY                                     \
         -v /tmp/.X11-unix:/tmp/.X11-unix                        \
         --net="host"                                            \
         -v $HOME/.Xauthority:/home/vivado/.Xauthority           \
         -v $PROJ_DIR:/home/vivado/project                       \
         petalinux:2021.1                                        \
         "$@"

Команда shift нужна для того чтоб аргумент с именем рабочей директории нужный
только этому скрипту не попал в сам контейнер.

Теперь можно, например, запустить комнаду на сборку проекта примерно так:

  .. code-clock:: sh

     ./run-container.sh /home/igor/peta-project plbuild


